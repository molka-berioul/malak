// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using malak.DbContexts;

#nullable disable

namespace malak.Migrations
{
    [DbContext(typeof(icfContext))]
    [Migration("20240508103003_mysecond")]
    partial class mysecond
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("malak.Entities.Admin", b =>
                {
                    b.Property<Guid>("idAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nomAdmin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idAdmin");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("malak.Entities.Centre", b =>
                {
                    b.Property<Guid>("idCentre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomCentre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCentre");

                    b.ToTable("centres");
                });

            modelBuilder.Entity("malak.Entities.Cour", b =>
                {
                    b.Property<Guid>("idCour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOffred")
                        .HasColumnType("bit");

                    b.Property<string>("NomCour")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StarTime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idProf")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("idCour");

                    b.HasIndex("idProf");

                    b.ToTable("cours");
                });

            modelBuilder.Entity("malak.Entities.Prof", b =>
                {
                    b.Property<Guid>("idProf")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomProf")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("idCentre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idProf");

                    b.HasIndex("idCentre");

                    b.ToTable("profs");
                });

            modelBuilder.Entity("malak.Entities.Student", b =>
                {
                    b.Property<Guid>("idStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomStudent")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("adresse")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("idCour")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idStudent");

                    b.HasIndex("idCour");

                    b.ToTable("students");
                });

            modelBuilder.Entity("malak.Entities.Cour", b =>
                {
                    b.HasOne("malak.Entities.Prof", "Prof")
                        .WithMany()
                        .HasForeignKey("idProf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prof");
                });

            modelBuilder.Entity("malak.Entities.Prof", b =>
                {
                    b.HasOne("malak.Entities.Centre", "Centre")
                        .WithMany()
                        .HasForeignKey("idCentre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centre");
                });

            modelBuilder.Entity("malak.Entities.Student", b =>
                {
                    b.HasOne("malak.Entities.Cour", "Cours")
                        .WithMany()
                        .HasForeignKey("idCour")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cours");
                });
#pragma warning restore 612, 618
        }
    }
}
